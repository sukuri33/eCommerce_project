import category.Category;
import category.Electronic;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

/**
 * This class isn't the representation of the DB yet
 * But the data generated by these methods in this class will be stored in the DB
 * Which is, in our case, eCommerceApplicationDB OR combination of both DataGenerator class and eCommerceApplicationDB
 * should be imagined as the application DB
 */
public class DataGeneretor{
    //this method will write/record/store the customer data in Customer Table in the DB
    public static void createCustomer() {
        //In order to create a customer, we need to create address object 1st because one field in customer class is address
        Address shukurAddress = new Address("123","Main St","Suit 100","20196","VA");
        Address ozzyAddress = new Address("1","17th St","APT K","34509","DC");
        Address ozzyAddress2 = new Address("9018","North Long Beach Rd","C100","56102","CA");
        Address ozzyAddress3 = new Address("9018","North Long Beach Rd","C100","56102","CA");

        List<Address> ozzyAddresses = new ArrayList<>();
        ozzyAddresses.add(ozzyAddress);
        ozzyAddresses.add(ozzyAddress2);
       // ozzyAddresses.add(ozzyAddress3); //uncomment this to demonstrate the Setter method use case and its benefit.

        //So this eCommerce app only has two customers in its DB OR will have when this method is being called in main method later
        Customer shukur = new Customer(UUID.randomUUID(),"shukur","shukur@gmail.com");
        Customer ozzy = new Customer(UUID.randomUUID(),"Ozzy","Ozzy@cydeoschool.com", ozzyAddresses);

        //This is step the generated customers handed over to application DB
        //We will be pulling customers information from this table
        ApplicationDB.CUSTOMER_TABLE.addAll(Arrays.asList(shukur,ozzy));
    }


    public static void createCategory() {

        Category category1 = new Electronic("Electronic",UUID.randomUUID());
        Category category2 = new Electronic("Skin Care",UUID.randomUUID());
        Category category3 = new Electronic("Furniture",UUID.randomUUID());

        ApplicationDB.CATEGORY_TABLE.addAll(Arrays.asList(category1,category2,category3));
    }


    public static void createProduct() {

        Product ps5 = new Product(UUID.randomUUID(),"PlayStation 5",499.99,11,11,ApplicationDB.CATEGORY_TABLE.get(0).getCategoryId());
        Product sony55inchTV = new Product(UUID.randomUUID(),"55\" Sony 4K TV",1899.99,30,30,ApplicationDB.CATEGORY_TABLE.get(0).getCategoryId());
        Product diningChair = new Product(UUID.randomUUID(),"Black Dinning Chair",65.99,110,110,ApplicationDB.CATEGORY_TABLE.get(2).getCategoryId());
        Product lipStick = new Product(UUID.randomUUID(),"Lipstick",71.99,500,500,ApplicationDB.CATEGORY_TABLE.get(1).getCategoryId());

        ApplicationDB.PRODUCT_TABLE.addAll(Arrays.asList(ps5,sony55inchTV,diningChair,lipStick));
    }
}

